{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_update.mjs","node_modules/@swc/helpers/src/_class_private_field_update.mjs","src/js/API/fetchAPI.js","src/index.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorUpdate(receiver, descriptor) {\n    if (descriptor.set) {\n        if (!descriptor.get) {\n            throw new TypeError(\"attempted to read set only private field\");\n        }\n        if (!(\"__destrWrapper\" in descriptor)) {\n            descriptor.__destrWrapper = {\n                set value(v) {\n                    descriptor.set.call(receiver, v);\n                },\n                get value() {\n                    return descriptor.get.call(receiver);\n                },\n            };\n        }\n        return descriptor.__destrWrapper;\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        return descriptor;\n    }\n}\n","import classExtractFieldDescriptor from \"./_class_extract_field_descriptor.mjs\";\nimport classApplyDescriptorUpdate from \"./_class_apply_descriptor_update.mjs\";\n\nexport default function _classPrivateFieldUpdate(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"update\");\n    return classApplyDescriptorUpdate(receiver, descriptor);\n}\n","export class NewsAPI{\n\n    #BASE_URL = \"https://api.nytimes.com/svc/\";\n    #API_KEY = \"Y0rMFldQHIhCKPc5jiggZphSD4GPFMzb\";\n    #period;\n    #query;\n    #beginDate;\n    #page;\n\n    #params = {\n        \"api-key\":this.#API_KEY,\n        q: this.#query, \n        page: this.#page,\n        begin_date: this.#beginDate,\n    }\n\n    constructor(){\n        this.#period = 7;\n        this.category = \"all\";\n        this.#page = 1;\n        this.#beginDate = \"20120101\";\n    }\n\n    async getPopularNews(){\n        const response = await fetch(this.#BASE_URL + `mostpopular/v2/viewed/${this.#period}.json?api-key=${this.#API_KEY}`);\n        if(!response.ok){\n            throw new Error(error); \n        }\n        const {results} =  await response.json();\n        return results;\n    }\n\n    async getNewsByQuery(){\n        Object.assign(this.#params,{\n            q:this.#query,\n            page:this.#page,\n            begin_date: this.#beginDate,\n        });\n\n        const response = await fetch(this.#BASE_URL + \"search/v2/articlesearch.json?\" + new URLSearchParams(this.#params));\n        if(!response.ok){\n            throw new Error(error); \n        }\n        \n        const{response:{docs,meta}}  = await response.json();\n        console.log(meta) // {hits: 29412, offset: 10, time: 30}\n        this.updatePage();\n        return docs;\n    }\n\n    async getNewsByCategories(){\n        let page = this.updatePage();\n        const response = await fetch(this.#BASE_URL + `/news/v3/content/inyt/${this.category}.json?` + new URLSearchParams({\n            \"api-key\": this.#API_KEY,\n            offset: page, // divisible by 20\n        }));\n        if(!response.ok){\n            throw new Error(error); \n        }\n        return await response.json();\n    }\n\n    async getCategories(){\n        const response = await fetch(this.#BASE_URL + `news/v3/content/section-list.json?api-key=${this.#API_KEY}`)\n        if(!response.ok){\n            throw new Error(error); \n        }\n        const {results} =  await response.json();\n        return results;\n    }\n\n    async getNewsById(array){\n        const promises = array.map(id => {\n            return fetch(this.#BASE_URL)\n        })\n    }\n\n    get query(){\n        return this.#query;\n    }\n    set query(newQuery){\n        this.#query = newQuery;\n    }\n\n    updatePage(){\n        this.#page++;\n    }\n    resetPage(){\n        this.#page = 1;\n    }\n\n    get date(){\n        this.#beginDate;\n    }\n    set date(newDate){\n        this.#beginDate = newDate;\n    }\n}","import { NewsAPI } from \"./js/API/fetchAPI\";\n\nconst newsFetch = new NewsAPI();\n\n// get categories 50 results\nnewsFetch.getCategories().then(console.log);\n\n\n// get popular 20 results\n\nnewsFetch.getPopularNews().then(console.log)\n\n// get news by query/date 10 results\nnewsFetch.query = \"apple\"\nnewsFetch.getNewsByQuery().then(console.log)\n"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$613067712a285d8d$export$2e2bcd8739ae039","writable","$97039f73d3457507$export$2e2bcd8739ae039","$9bd79d1c60c99532$export$2e2bcd8739ae039","__destrWrapper","v","$178a5e9aee1d5ea4$export$2e2bcd8739ae039","$37b0863e78b74192$var$_BASE_URL","WeakMap","$37b0863e78b74192$var$_API_KEY","$37b0863e78b74192$var$_period","$37b0863e78b74192$var$_query","$37b0863e78b74192$var$_beginDate","$37b0863e78b74192$var$_page","$37b0863e78b74192$var$_params","$1f0dc3b9307be026$var$newsFetch","async","response","fetch","this","ok","Error","error","results","json","Object","assign","q","page","begin_date","URLSearchParams","docs","meta","console","log","updatePage","category","offset","array","map","id","query","newQuery","resetPage","date","newDate","constructor","getCategories","then","getPopularNews","getNewsByQuery"],"version":3,"file":"index.f9957b2a.js.map"}